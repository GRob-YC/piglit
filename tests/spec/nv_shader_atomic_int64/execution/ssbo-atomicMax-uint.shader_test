[require]
GL >= 4.0
GLSL >= 4.4
GL_ARB_compute_shader
GL_ARB_shader_atomic_counters
GL_ARB_gpu_shader_int64
GL_NV_shader_atomic_int64

[compute shader]
#version 440
#extension GL_ARB_compute_shader: require
#extension GL_ARB_shader_atomic_counters: require
#extension GL_ARB_gpu_shader_int64 : require
#extension GL_NV_shader_atomic_int64 : require

layout(local_size_x = 64) in;

layout(binding = 0) buffer bufblock {
	shared uint64_t value;
};

layout(binding = 0) uniform atomic_uint fail;

void main()
{
	if (gl_LocalInvocationIndex == 0u) {
		value = 0xfffffffffffffffful;
	}

	barrier();

	uint64_t local_index = uint64_t(gl_LocalInvocationIndex);
	uint64_t v;

	/* For value, every instance should get 0xfffffffffffffffful. */
	v = atomicMax(value, local_index);
	if (v != 0xfffffffffffffffful)
		atomicCounterIncrement(fail);

	if (value != 0xfffffffffffffffful)
		atomicCounterIncrement(fail);
}

[test]
atomic counters 1
ssbo 0 64

compute 1 1 1

probe atomic counter 0 == 0
