# According to GL 3.2 section 2.11.6 ("Varying Variables")
#
#  All components of any varying and special variable written are counted
# against the gl_MaxVertexOutputComponents limit.
#  All components of any varying and special variable read are counted
# against the gl_MaxFragmentInputComponents limit.
#  gl_Position is a special variables, thus it takes 4 components.
#
#  When linking a program containing only a vertex and fragment shader
# there is an additional limit gl_MaxVaryingComponents, which doesn't
# include components consumed by gl_Position.

[require]
GLSL >= 1.50

[vertex shader]
#version 150

in vec4 piglit_vertex;

flat out ivec4 f[min(min(gl_MaxFragmentInputComponents, gl_MaxVertexOutputComponents - 4), gl_MaxVaryingComponents) / 4];

void main()
{
  gl_Position = piglit_vertex;

  for (int i = 0; i < f.length(); i++)
    f[i] = ivec4(i * 4, i * 4 + 1, i * 4 + 2, i * 4 + 3);
}

[fragment shader]
#version 150

flat in ivec4 f[min(min(gl_MaxFragmentInputComponents, gl_MaxVertexOutputComponents - 4), gl_MaxVaryingComponents) / 4];

void main()
{
  bool ok = true;
  for (int i = 0; i < f.length(); i++) {
    if (f[i] != ivec4(i * 4, i * 4 + 1, i * 4 + 2, i * 4 + 3))
      ok = false;
  }
  gl_FragColor = ok ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
}

[test]
clear color 0.0 0.0 0.0 0.0
clear
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
