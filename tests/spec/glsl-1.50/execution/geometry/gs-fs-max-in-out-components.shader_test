# According to GL 3.2 section 2.12 ("GEOMETRY SHADERS",
# "Geometry Shader Outputs") and section 2.11.6 ("Varying Variables")
#
#  All components of any varying and special variable written are counted
# against the gl_MaxGeometryOutputComponents limit.
#  All components of any varying and special variable read are counted
# against the gl_MaxFragmentInputComponents limit.
#  gl_Position is a special variables, thus it takes 4 components.

[require]
GLSL >= 1.50

[vertex shader passthrough]

[geometry shader]
#version 150

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

flat out ivec4 f[min(gl_MaxFragmentInputComponents, gl_MaxGeometryOutputComponents - 4) / 4];

void main()
{
  for (int i = 0; i < 3; i++) {
    gl_Position = gl_in[i].gl_Position;

    for (int i = 0; i < f.length(); i++)
      f[i] = ivec4(i * 4, i * 4 + 1, i * 4 + 2, i * 4 + 3);

    EmitVertex();
  }

  EndPrimitive();
}

[fragment shader]
#version 150

flat in ivec4 f[min(gl_MaxFragmentInputComponents, gl_MaxGeometryOutputComponents - 4) / 4];

void main()
{
  bool ok = true;
  for (int i = 0; i < f.length(); i++) {
    if (f[i] != ivec4(i * 4, i * 4 + 1, i * 4 + 2, i * 4 + 3))
      ok = false;
  }

  gl_FragColor = ok ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
}

[test]
clear color 0.0 0.0 0.0 0.0
clear
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
